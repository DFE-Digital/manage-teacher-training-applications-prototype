{% set filterOptionsHtml %}

  {{ govukInput({
      id: 'keywords',
      name: 'keywords',
      label: {
        text: "Candidateâ€™s name",
        classes: 'govuk-label--s'
      },
      value: data.keywords
    }) }}

    {{ govukCheckboxes({
      idPrefix: "cycle",
      name: "cycle",
      classes: "govuk-checkboxes--small",
      fieldset: {
        legend: {
          text: "Cycle",
          isPageHeading: false,
          classes: "govuk-fieldset__legend--s"
        }
      },
      items: [
        {
          value: "Current cycle (2020 to 2021)",
          text: "2020 to 2021 (Current)",
          checked: checked("cycle", "Current cycle (2020 to 2021)")
        },
        {
          value: "Previous cycle (2019 to 2020)",
          text: "2019 to 2020",
          checked: checked("cycle", "Previous cycle (2019 to 2020)")
        }
      ]
    }) }}

    {{ govukCheckboxes({
      idPrefix: 'status',
      name: 'status',
      classes: "govuk-checkboxes--small",
      fieldset: {
        legend: {
          text: 'Status',
          classes: 'govuk-fieldset__legend--s'
        }
      },
      items: [
        {
          value: 'Submitted',
          text: 'Submitted',
          checked: checked("status", "Submitted") == 'checked'
        },
        {
          value: 'Offered',
          text: 'Offered',
          checked: checked("status", "Offered") == 'checked'
        },
        {
          value: 'Accepted',
          text: 'Accepted',
          checked: checked("status", "Accepted") == 'checked'
        },
        {
          value: 'Conditions met',
          text: 'Conditions met',
          checked: checked("status", "Conditions met") == 'checked'
        },
        {
          value: 'Deferred',
          text: 'Deferred',
          checked: checked("status", "Deferred") == 'checked'
        },
        {
          value: 'Declined',
          text: 'Declined',
          checked: checked("status", "Declined") == 'checked'
        },
        {
          value: 'Rejected',
          text: 'Rejected',
          checked: checked("status", "Rejected") == 'checked'
        },
        {
          value: 'Application withdrawn',
          text: 'Application withdrawn',
          checked: checked("status", "Application withdrawn") == 'checked'
        },
        {
          value: 'Offer withdrawn',
          text: 'Offer withdrawn',
          checked: checked("status", "Offer withdrawn") == 'checked'
        }
      ]
    }) }}

    {{ govukCheckboxes({
      idPrefix: 'provider',
      name: 'provider',
      classes: "govuk-checkboxes--small",
      fieldset: {
        legend: {
          text: 'Courses run by',
          classes: 'govuk-fieldset__legend--s'
        }
      },
      items: [
        {
          value: data.user.organisations[0].name,
          text: data.user.organisations[0].name,
          checked: checked("provider", data.user.organisations[0].name) == 'checked'
        },
        {
          value: data.user.organisations[1].name,
          text: data.user.organisations[1].name,
          checked: checked("provider", data.user.organisations[1].name) == 'checked'
        }
      ]
    }) }}

    {% if checked("provider", data.user.organisations[0].name) %}

      {{ govukCheckboxes({
        name: 'locationname',
        classes: "govuk-checkboxes--small",
        fieldset: {
          legend: {
            text: 'Training locations for ' + data.user.organisations[0].name,
            classes: 'govuk-fieldset__legend--s'
          }
        },
        items: [
          {
            value: 'Main site',
            text: 'Main site',
            checked: checked("locationname", "Main site") == 'checked'
          },
          {
            value: 'Camberley - training location',
            text: 'Camberley - training location',
            checked: checked("locationname", "Camberley - training location") == 'checked'
          },
          {
            value: 'Epsom Grinstead - training location',
            text: 'Epsom Grinstead - training location',
            checked: checked("locationname", "Epsom Grinstead - training location") == 'checked'
          },
          {
            value: 'Lingfield - training location',
            text: 'Lingfield - training location',
            checked: checked("locationname", "Lingfield - training location") == 'checked'
          }
        ]
      }) }}
    {% endif %}

    {{ govukCheckboxes({
      idPrefix: 'accreditingbody',
      name: 'accreditingbody',
      classes: "govuk-checkboxes--small",
      fieldset: {
        legend: {
          text: 'Courses ratified by',
          classes: 'govuk-fieldset__legend--s'
        }
      },
      items: [
        {
          value: data.accreditedBodies[0].name,
          text: data.accreditedBodies[0].name,
          checked: checked("accreditingbody", data.accreditedBodies[0].name) == 'checked'
        },
        {
          value: data.accreditedBodies[1].name,
          text: data.accreditedBodies[1].name,
          checked: checked("accreditingbody", data.accreditedBodies[1].name) == 'checked'
        }
      ]
    }) }}
  {% endset %}

  <div class="moj-filter" tabindex="-1">
    <div class="moj-filter__header">
      <div class="moj-filter__header-title">
        <h2 class="govuk-heading-m">Filter</h2>
      </div>
      <div class="moj-filter__header-action">

      </div>
    </div>
    <div class="moj-filter__content">
      {% if selectedFilters %}
        <div class="moj-filter__selected">
          <div class="moj-filter__selected-heading">
            <div class="moj-filter__heading-title">
              <h2 class="govuk-heading-m">Selected filters</h2>
            </div>
            <div class="moj-filter__heading-action">
              <p><a class="govuk-link govuk-link--no-visited-state" href="/remove-all-filters">Clear</a></p>
            </div>
          </div>

          {% for category in selectedFilters.categories %}
            <h3 class="govuk-heading-s govuk-!-margin-bottom-0">{{ category.heading.text }}</h3>
            <ul class="moj-filter-tags">
              {% for item in category.items %}
                <li><a class="moj-filter__tag" href="{{item.href}}"><span class="govuk-visually-hidden">Remove this filter</span> {{item.text}}</a></li>
              {% endfor %}
            </ul>
          {% endfor %}
        </div>
      {% endif %}
      <div class="moj-filter__options">
        <form method="get" action="/">
          <button class="govuk-button" data-module="govuk-button">
            Apply filters
          </button>
          {{filterOptionsHtml | safe}}
        </form>
      </div>
    </div>
  </div>
