{% set filterOptionsHtml %}

  {{ govukCheckboxes({
    idPrefix: "importantItem",
    name: "importantItem",
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: "Important",
        isPageHeading: false,
        classes: "govuk-fieldset__legend--s"
      }
    },
    items: importantCheckboxItems
  }) }}

  {% if userItems.length >= userItemsDisplayLimit %}

    {{ appCheckboxFilter({
      idPrefix: 'assignedUser',
      name: 'assignedUser',
      legend: {
        text: 'Assigned user'
      },
      items: userItems,
      selectedItems: selectedUsers,
      classes: 'govuk-!-margin-bottom-7'
    }) }}

  {% else %}

    {{ govukCheckboxes({
      idPrefix: 'assignedUser',
      name: 'assignedUser',
      fieldset: {
        legend: {
          text: 'Assigned user',
          classes: 'govuk-fieldset__legend--s'
        }
      },
      items: userItems,
      classes: "govuk-checkboxes--small"
    }) }}

  {% endif %}

  {{ govukCheckboxes({
    idPrefix: 'notes',
    name: 'notes',
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: 'Notes',
        classes: 'govuk-fieldset__legend--s'
      }
    },
    items: [{
      value: 'Has note',
      text: 'Has note'
    }, {
      value: 'Does not have note',
      text: 'Does not have note'
    }]
  }) }}

  {{ govukCheckboxes({
    idPrefix: 'status',
    name: 'status',
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: 'Status',
        classes: 'govuk-fieldset__legend--s'
      }
    },
    items: statusCheckboxItems
  }) }}

  {% if trainingProviderItems.length > 1 %}

    {{ govukCheckboxes({
      idPrefix: 'provider',
      name: 'provider',
      classes: "govuk-checkboxes--small",
      fieldset: {
        legend: {
          text: 'Training provider',
          classes: 'govuk-fieldset__legend--s'
        }
      },
      items: trainingProviderItems
    }) }}

  {% endif %}

  {# {% if checked("provider", data.trainingProviders[0].name) or trainingProviderItems.length == 1 %}
    {{ govukCheckboxes({
      name: 'location',
      classes: "govuk-checkboxes--small",
      fieldset: {
        legend: {
          text: 'Locations for ' + data.trainingProviders[0].name,
          classes: 'govuk-fieldset__legend--s'
        }
      },
      items: locationItems
    }) }}
  {% endif %} #}

  {% if accreditedBodyItems.length > 1 %}
    {{ govukCheckboxes({
      idPrefix: 'accreditedBody',
      name: 'accreditedBody',
      classes: "govuk-checkboxes--small",
      fieldset: {
        legend: {
          text: 'Accredited body',
          classes: 'govuk-fieldset__legend--s'
        }
      },
      items: accreditedBodyItems
    }) }}
  {% endif %}

  {% for item in trainingProviderItems %}

    {{ govukCheckboxes({
      name: 'location',
      classes: "govuk-checkboxes--small",
      fieldset: {
        legend: {
          text: 'Locations for ' + item.text,
          classes: 'govuk-fieldset__legend--s'
        }
      },
      items: locationItems
    }) }}

  {% endfor %}

  {% for item in accreditedBodyItems %}

    {{ govukCheckboxes({
      name: 'location',
      classes: "govuk-checkboxes--small",
      fieldset: {
        legend: {
          text: 'Locations for ' + item.text,
          classes: 'govuk-fieldset__legend--s'
        }
      },
      items: locationItems
    }) }}

  {% endfor %}



  {% if subjectItems.length >= subjectItemsDisplayLimit %}

    {{ appCheckboxFilter({
      idPrefix: 'subject',
      name: 'subject',
      legend: {
        text: 'Subject'
      },
      items: subjectItems,
      selectedItems: selectedSubjects,
      classes: 'govuk-!-margin-bottom-7'
    }) }}

  {% else %}

    {{ govukCheckboxes({
      idPrefix: 'subject',
      name: 'subject',
      fieldset: {
        legend: {
          text: 'Subject',
          classes: 'govuk-fieldset__legend--s'
        }
      },
      items: subjectItems,
      classes: "govuk-checkboxes--small"
    }) }}

  {% endif %}

  {{ govukCheckboxes({
    idPrefix: 'studyMode',
    name: 'studyMode',
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: 'Full time or part time',
        classes: 'govuk-fieldset__legend--s'
      }
    },
    items: [
      {
        value: 'Full time',
        text: 'Full time',
        checked: checked("studyMode", 'Full time') == 'checked'
      },
      {
        value: 'Part time',
        text: 'Part time',
        checked: checked("studyMode", 'Part time') == 'checked'
      }
    ]
  }) }}

  {{ govukCheckboxes({
    idPrefix: "cycle",
    name: "[cycle]",
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: "Recruitment cycle",
        isPageHeading: false,
        classes: "govuk-fieldset__legend--s"
      }
    },
    items: cycleItems
  }) }}
{% endset %}

<div class="app-filter">
  <div class="app-filter__header">
    <div class="app-filter__header-title">
      <h2 class="govuk-heading-m">Filter</h2>
    </div>
    <div class="app-filter__header-action">

    </div>
  </div>
  <div class="app-filter__content">
    {% if selectedFilters %}
      <div class="app-filter__selected">
        <div class="app-filter__selected-heading">
          <div class="app-filter__heading-title">
            <h2 class="govuk-heading-m govuk-!-margin-bottom-1">Selected filters</h2>
            <p class="govuk-body"><a class="govuk-link govuk-link--no-visited-state" href="/applications/remove-all-filters">Clear filters</a></p>
          </div>
        </div>
        {% for category in selectedFilters.categories %}
          <h3 class="govuk-heading-s govuk-!-margin-bottom-0">{{ category.heading.text }}</h3>
          <ul class="app-filter-tags">
            {% for item in category.items %}
              <li><a class="app-filter__tag" href="{{item.href}}"><span class="govuk-visually-hidden">Remove this filter</span> {{item.text}}</a></li>
            {% endfor %}
          </ul>
        {% endfor %}
      </div>
    {% endif %}
    <div class="app-filter__options">
      <form method="get" action="/" novalidate>
        <button class="govuk-button" data-module="govuk-button">
          Apply filters
        </button>
        {{filterOptionsHtml | safe}}
      </form>
    </div>
  </div>
</div>
