{% set filterOptionsHtml %}

  {{ govukCheckboxes({
    idPrefix: "cycle",
    name: "cycle",
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: "Year received",
        isPageHeading: false,
        classes: "govuk-fieldset__legend--s"
      }
    },
    items: [
      {
        value: "2020 to 2021",
        text: "2020 to 2021" | cycleText,
        checked: checked(data.cycle, "2020 to 2021")
      },
      {
        value: "2019 to 2020",
        text: "2019 to 2020" | cycleText,
        checked: checked(data.cycle, "2019 to 2020")
      }
    ]
  }) }}

  {{ govukCheckboxes({
    idPrefix: 'status',
    name: 'status',
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: 'Status',
        classes: 'govuk-fieldset__legend--s'
      }
    },
    items: [
      {
        value: 'Received',
        text: 'Received',
        checked: checked(data.status, "Received") == 'checked'
      },
      {
        value: 'Interviewing',
        text: 'Interviewing',
        checked: checked(data.status, "Interviewing") == 'checked'
      },
      {
        value: 'Offered',
        text: 'Offered',
        checked: checked(data.status, "Offered") == 'checked'
      },
      {
        value: 'Accepted',
        text: 'Accepted',
        checked: checked(data.status, "Accepted") == 'checked'
      },
      {
        value: 'Conditions met',
        text: 'Conditions met',
        checked: checked(data.status, "Conditions met") == 'checked'
      },
       {
        value: 'Conditions not met',
        text: 'Conditions not met',
        checked: checked(data.status, "Conditions not met") == 'checked'
      },
      {
        value: 'Deferred',
        text: 'Deferred',
        checked: checked(data.status, "Deferred") == 'checked'
      },
      {
        value: 'Declined',
        text: 'Declined',
        checked: checked(data.status, "Declined") == 'checked'
      },
      {
        value: 'Rejected',
        text: 'Rejected',
        checked: checked(data.status, "Rejected") == 'checked'
      },
      {
        value: 'Application withdrawn',
        text: 'Application withdrawn',
        checked: checked(data.status, "Application withdrawn") == 'checked'
      },
      {
        value: 'Offer withdrawn',
        text: 'Offer withdrawn',
        checked: checked(data.status, "Offer withdrawn") == 'checked'
      }
    ]
  }) }}

  {{ govukCheckboxes({
    idPrefix: 'provider',
    name: 'provider',
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: 'Courses run by',
        classes: 'govuk-fieldset__legend--s'
      }
    },
    items: [
      {
        value: data.user.organisations[0].name,
        text: data.user.organisations[0].name,
        checked: checked(data.provider, data.user.organisations[0].name) == 'checked'
      },
      {
        value: data.user.organisations[1].name,
        text: data.user.organisations[1].name,
        checked: checked(data.provider, data.user.organisations[1].name) == 'checked'
      }
    ]
  }) }}

  {% if checked(data.provider, data.user.organisations[0].name) %}

    {{ govukCheckboxes({
      name: 'locationname',
      classes: "govuk-checkboxes--small",
      fieldset: {
        legend: {
          text: 'Training locations for ' + data.user.organisations[0].name,
          classes: 'govuk-fieldset__legend--s'
        }
      },
      items: [
        {
          value: 'Main site',
          text: 'Main site',
          checked: checked(data.locationname, "Main site") == 'checked'
        },
        {
          value: 'Camberley - training location',
          text: 'Camberley - training location',
          checked: checked(data.locationname, "Camberley - training location") == 'checked'
        },
        {
          value: 'Epsom Grinstead - training location',
          text: 'Epsom Grinstead - training location',
          checked: checked(data.locationname, "Epsom Grinstead - training location") == 'checked'
        },
        {
          value: 'Lingfield - training location',
          text: 'Lingfield - training location',
          checked: checked(data.locationname, "Lingfield - training location") == 'checked'
        }
      ]
    }) }}
  {% endif %}

  {{ govukCheckboxes({
    idPrefix: 'accreditingbody',
    name: 'accreditingbody',
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: 'Courses ratified by',
        classes: 'govuk-fieldset__legend--s'
      }
    },
    items: [
      {
        value: data.accreditedBodies[0].name,
        text: data.accreditedBodies[0].name,
        checked: checked(data.accreditingbody, data.accreditedBodies[0].name) == 'checked'
      },
      {
        value: data.accreditedBodies[1].name,
        text: data.accreditedBodies[1].name,
        checked: checked(data.accreditingbody, data.accreditedBodies[1].name) == 'checked'
      }
    ]
  }) }}

  {{ appOptionSelect({
    idPrefix: 'subject',
    name: 'subject',
    filter: {
      text: 'Subject'
    },
    heading: {
      text: 'Subject'
    },
    attributes: {
      'data-single': "subject",
      'data-multiple': "subjects",
      'data-selected': "selected subjects"
    },
    items: [
      {
        text: 'Primary',
        id: 'primary',
        value: 'Primary',
        checked: checked(data.subject, 'Primary') == 'checked'
      },
      {
        text: 'Primary with English',
        id: 'primary-with-english',
        value: 'Primary with English',
        checked: checked(data.subject, 'Primary with English') == 'checked'
      },
      {
        text: 'Primary with geography and history',
        id: 'primary-with-geography-and-history',
        value: 'Primary with geography and history',
        checked: checked(data.subject, 'Primary with geography and history') == 'checked'
      },
      {
        text: 'Primary with mathematics',
        id: 'primary-with-mathematics',
        value: 'Primary with mathematics',
        checked: checked(data.subject, 'Primary with mathematics') == 'checked'
      },
      {
        text: 'Primary with modern languages',
        id: 'primary-with-modern-languages',
        value: 'Primary with modern languages',
        checked: checked(data.subject, 'Primary with modern languages') == 'checked'
      },
      {
        text: 'Primary with physical education',
        id: 'primary-with-physical-education',
        value: 'Primary with physical education',
        checked: checked(data.subject, 'Primary with physical education') == 'checked'
      },
      {
        text: 'Primary with science',
        id: 'primary-with-science',
        value: 'Primary with science',
        checked: checked(data.subject, 'Primary with science') == 'checked'
      },
      {
        text: 'Art and design',
        id: 'art-and-design',
        value: 'Art and design',
        checked: checked(data.subject, 'Art and design') == 'checked'
      },
      {
        text: 'Biology',
        id: 'biology',
        value: 'Biology',
        checked: checked(data.subject, 'Biology') == 'checked'
      },
      {
        text: 'Business studies',
        id: 'business-studies',
        value: 'Business studies',
        checked: checked(data.subject, 'Business studies') == 'checked'
      },
      {
        text: 'Chemistry',
        id: 'chemistry',
        value: 'Chemistry',
        checked: checked(data.subject, 'Chemistry') == 'checked'
      },
      {
        text: 'Citizenship',
        id: 'citizenship',
        value: 'Citizenship',
        checked: checked(data.subject, 'Citizenship') == 'checked'
      },
      {
        text: 'Classics',
        id: 'classics',
        value: 'Classics',
        checked: checked(data.subject, 'Classics') == 'checked'
      },
      {
        text: 'Communications and media studies',
        id: 'communications-and-media-studies',
        value: 'Communications and media studies',
        checked: checked(data.subject, 'Communications and media studies') == 'checked'
      },
      {
        text: 'Computing',
        id: 'computing',
        value: 'Computing',
        checked: checked(data.subject, 'Computing') == 'checked'
      },
      {
        text: 'Dance',
        id: 'dance',
        value: 'Dance',
        checked: checked(data.subject, 'Dance') == 'checked'
      },
      {
        text: 'Design and technology',
        id: 'design-and-technology',
        value: 'Design and technology',
        checked: checked(data.subject, 'Design and technology') == 'checked'
      },
      {
        text: 'Drama',
        id: 'drama',
        value: 'Drama',
        checked: checked(data.subject, 'Drama') == 'checked'
      },
      {
        text: 'Economics',
        id: 'economics',
        value: 'Economics',
        checked: checked(data.subject, 'Economics') == 'checked'
      },
      {
        text: 'English',
        id: 'english',
        value: 'English',
        checked: checked(data.subject, 'English') == 'checked'
      },
      {
        text: 'Geography',
        id: 'geography',
        value: 'Geography',
        checked: checked(data.subject, 'Geography') == 'checked'
      },
      {
        text: 'Health and social care',
        id: 'health-and-social-care',
        value: 'Health and social care',
        checked: checked(data.subject, 'Health and social care') == 'checked'
      },
      {
        text: 'History',
        id: 'history',
        value: 'History',
        checked: checked(data.subject, 'History') == 'checked'
      },
      {
        text: 'Mathematics',
        id: 'mathematics',
        value: 'Mathematics',
        checked: checked(data.subject, 'Mathematics') == 'checked'
      },
      {
        text: 'Music',
        id: 'music',
        value: 'Music',
        checked: checked(data.subject, 'Music') == 'checked'
      },
      {
        text: 'Physical education',
        id: 'physical-education',
        value: 'Physical education',
        checked: checked(data.subject, 'Physical education') == 'checked'
      },
      {
        text: 'Physics',
        id: 'physics',
        value: 'Physics',
        checked: checked(data.subject, 'Physics') == 'checked'
      },
      {
        text: 'Psychology',
        id: 'psychology',
        value: 'Psychology',
        checked: checked(data.subject, 'Psychology') == 'checked'
      },
      {
        text: 'Religious education',
        id: 'religious-education',
        value: 'Religious education',
        checked: checked(data.subject, 'Religious education') == 'checked'
      },
      {
        text: 'Science',
        id: 'science',
        value: 'Science',
        checked: checked(data.subject, 'Science') == 'checked'
      },
      {
        text: 'Social sciences',
        id: 'social-sciences',
        value: 'Social sciences',
        checked: checked(data.subject, 'Social sciences') == 'checked'
      },
      {
        text: 'English as a second or other language',
        id: 'english-as-a-second-or-other-language',
        value: 'English as a second or other language',
        checked: checked(data.subject, 'English as a second or other language') == 'checked'
      },
      {
        text: 'French',
        id: 'french',
        value: 'French',
        checked: checked(data.subject, 'French') == 'checked'
      },
      {
        text: 'German',
        id: 'german',
        value: 'German',
        checked: checked(data.subject, 'German') == 'checked'
      },
      {
        text: 'Italian',
        id: 'italian',
        value: 'Italian',
        checked: checked(data.subject, 'Italian') == 'checked'
      },
      {
        text: 'Japanese',
        id: 'japanese',
        value: 'Japanese',
        checked: checked(data.subject, 'Japanese') == 'checked'
      },
      {
        text: 'Mandarin',
        id: 'mandarin',
        value: 'Mandarin',
        checked: checked(data.subject, 'Mandarin') == 'checked'
      },
      {
        text: 'Modern languages (other)',
        id: 'modern-languages-other',
        value: 'Modern languages (other)',
        checked: checked(data.subject, 'Modern languages (other)') == 'checked'
      },
      {
        text: 'Russian',
        id: 'russian',
        value: 'Russian',
        checked: checked(data.subject, 'Russian') == 'checked'
      },
      {
        text: 'Spanish',
        id: 'spanish',
        value: 'Spanish',
        checked: checked(data.subject, 'Spanish') == 'checked'
      }
    ],
    classes: 'govuk-!-margin-bottom-7'
  }) }}




  {{ govukCheckboxes({
    idPrefix: 'studyMode',
    name: 'studyMode',
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: 'Full time or part time',
        classes: 'govuk-fieldset__legend--s'
      }
    },
    items: [
      {
        value: 'Full time',
        text: 'Full time',
        checked: checked(data.studyMode, 'Full time') == 'checked'
      },
      {
        value: 'Part time',
        text: 'Part time',
        checked: checked(data.studyMode, 'Part time') == 'checked'
      }
    ]
  }) }}
{% endset %}

<div class="app-filter">
  <div class="app-filter__header">
    <div class="app-filter__header-title">
      <h2 class="govuk-heading-m">Filter</h2>
    </div>
    <div class="app-filter__header-action">

    </div>
  </div>
  <div class="app-filter__content">
    {% if selectedFilters %}
      <div class="app-filter__selected">
        <div class="app-filter__selected-heading">
          <div class="app-filter__heading-title">
            <h2 class="govuk-heading-m govuk-!-margin-bottom-1">Selected filters</h2>
            <p class="govuk-body"><a class="govuk-link govuk-link--no-visited-state" href="/remove-all-filters">Clear filters</a></p>
          </div>
        </div>

        {% for category in selectedFilters.categories %}
          <h3 class="govuk-heading-s govuk-!-margin-bottom-0">{{ category.heading.text }}</h3>
          <ul class="app-filter-tags">
            {% for item in category.items %}
              <li><a class="app-filter__tag" href="{{item.href}}"><span class="govuk-visually-hidden">Remove this filter</span> {{item.text}}</a></li>
            {% endfor %}
          </ul>
        {% endfor %}
      </div>
    {% endif %}
    <div class="app-filter__options">
      <form method="get" action="/" novalidate>
        <button class="govuk-button" data-module="govuk-button">
          Apply filters
        </button>
        {{filterOptionsHtml | safe}}
      </form>
    </div>
  </div>
</div>
