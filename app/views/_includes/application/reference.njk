{% set reference = application["references"][referenceId] %}
{% set referenceHtml %}
  {% if reference.status == "received" %}
    {% set rowData = [] %}
    {% for item in reference.ratings %}
      {% set rows = rowData.push([{
        text: item.label
      }, {
        html: item.value + " <span aria-label=\"out of\">/</span> 10" if item.value else "Donâ€™t know",
        format: "numeric"
      }]) %}
    {% endfor %}
  {% else %}
    {{ govukTag({
      classes: "app-tag--" + reference.status,
      text: reference.status | capitalize
    }) }}
  {% endif %}
{% endset %}
{% set relationshipHtml %}
  {% if reference.relationship.validated %}
    <p class="govuk-body">Yes</p>
  {% else %}
    <p class="govuk-body">No</p>
  {% endif %}
{% endset %}

{# <p class="govuk-body">Amended by referee:</p>
    {{ govukInsetText({
      text: reference.relationship.correction,
      classes: "govuk-!-margin-top-0 govuk-!-padding-top-0 govuk-!-padding-bottom-0"
    }) }}
  {% endif %} #}


{% set safeguardingResponseHtml -%}
  {%- if reference.safeguarding.response == "yes" -%}
    <p class="govuk-body">Yes</p>
  {%- elif reference.safeguarding.response == "no" -%}
    <p class="govuk-body">No</p>
  {%- endif -%}
{%- endset %}
{{ govukSummaryList({
  rows: [{
    key: {
      text: "Name"
    },
    value: {
      text: reference.name
    }
  }, {
    key: {
      text: "Email address"
    },
    value: {
      html: "<a href=\"mailto:" + reference.email + "\">" + reference.email + "</a>"
    }
  }, {
    key: {
      text: "Phone number"
    },
    value: {
      html: "<a href=\"tel:" + reference.tel | replace(" ", "") + "\">" + reference.tel + "</a>"
    }
  }, {
    key: {
      html: "Type of reference"
    },
    value: {
      html: reference.type
    }
  }, {
    key: {
      text: "Relationship between candidate and referee"
    },
    value: {
      text: reference.relationship.summary | nl2br
    }
  }, {
    key: {
      text: "Relationship confirmed by referee?"
    },
    value: {
      html: relationshipHtml
    }
  }, {
    key: {
      text: "Relationship amended by referee"
    },
    value: {
      text: reference.relationship.correction
    }
  } if not reference.relationship.validated,
  {
    key: {
      text: "Does referee know of any reason why this candidate should not work with children?"
    },
    value: {
      html: safeguardingResponseHtml
    }
  },
  {
    key: {
      text: "Reason(s) given by referee why this candidate should not work with children"
    },
    value: {
      html: reference.safeguarding.concerns | nl2br
    }
  } if reference.safeguarding.response == "yes",
  {
    key: {
      html: "Reference"
    },
    value: {
      html: reference.comments | nl2br
    }
  }]
}) }}
