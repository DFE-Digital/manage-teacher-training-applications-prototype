{% set filterOptionsHtml %}

  {{ govukCheckboxes({
    idPrefix: "cycle",
    name: "statisticsFilters[cycle]",
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: "Year received",
        isPageHeading: false,
        classes: "govuk-fieldset__legend--s"
      }
    },
    items: [
      {
        value: "2020 to 2021",
        text: "2020 to 2021" | cycleText,
        checked: checked(data.statisticsFilters.cycle, "2020 to 2021")
      },
      {
        value: "2019 to 2020",
        text: "2019 to 2020" | cycleText,
        checked: checked(data.statisticsFilters.cycle, "2019 to 2020")
      }
    ]
  }) if (showFilters and 'cycle' in showFilters) }}

  {{ govukCheckboxes({
    idPrefix: "status",
    name: "statisticsFilters[status]",
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: "Status",
        classes: "govuk-fieldset__legend--s"
      }
    },
    items: [
      {
        value: "Received",
        text: "Received",
        checked: checked(data.statisticsFilters.status, "Received") == "checked"
      },
      {
        value: "Interviewing",
        text: "Interviewing",
        checked: checked(data.statisticsFilters.status, "Interviewing") == "checked"
      },
      {
        value: "Offered",
        text: "Offered",
        checked: checked(data.statisticsFilters.status, "Offered") == "checked"
      },
      {
        value: "Awaiting conditions",
        text: "Awaiting conditions",
        checked: checked(data.statisticsFilters.status, "Awaiting conditions") == "checked"
      },
      {
        value: "Ready to enroll",
        text: "Ready to enroll",
        checked: checked(data.statisticsFilters.status, "Ready to enroll") == "checked"
      },
       {
        value: "Conditions not met",
        text: "Conditions not met",
        checked: checked(data.statisticsFilters.status, "Conditions not met") == "checked"
      },
      {
        value: "Deferred",
        text: "Deferred",
        checked: checked(data.statisticsFilters.status, "Deferred") == "checked"
      },
      {
        value: "Declined",
        text: "Declined",
        checked: checked(data.statisticsFilters.status, "Declined") == "checked"
      },
      {
        value: "Rejected",
        text: "Rejected",
        checked: checked(data.statisticsFilters.status, "Rejected") == "checked"
      },
      {
        value: "Application withdrawn",
        text: "Application withdrawn",
        checked: checked(data.statisticsFilters.status, "Application withdrawn") == "checked"
      },
      {
        value: "Offer withdrawn",
        text: "Offer withdrawn",
        checked: checked(data.statisticsFilters.status, "Offer withdrawn") == "checked"
      }
    ]
  })  if (showFilters and 'status' in showFilters) }}

  {{ govukCheckboxes({
    idPrefix: "provider",
    name: "statisticsFilters[provider]",
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: "Courses run by",
        classes: "govuk-fieldset__legend--s"
      }
    },
    items: [
      {
        value: data.user.organisations[0].name,
        text: data.user.organisations[0].name,
        checked: checked(data.statisticsFilters.provider, data.user.organisations[0].name) == "checked"
      },
      {
        value: data.user.organisations[1].name,
        text: data.user.organisations[1].name,
        checked: checked(data.statisticsFilters.provider, data.user.organisations[1].name) == "checked"
      }
    ]
  }) if (showFilters and 'provider' in showFilters) }}

  {{ govukCheckboxes({
    name: "statisticsFilters[location]",
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: "Training locations",
        classes: "govuk-fieldset__legend--s"
      }
    },
    items: [
      {
        value: "Main site",
        text: "Main site",
        checked: checked(data.statisticsFilters.location, "Main site") == "checked"
      },
      {
        value: "Camberley - training location",
        text: "Camberley - training location",
        checked: checked(data.statisticsFilters.location, "Camberley - training location") == "checked"
      },
      {
        value: "Epsom Grinstead - training location",
        text: "Epsom Grinstead - training location",
        checked: checked(data.statisticsFilters.location, "Epsom Grinstead - training location") == "checked"
      },
      {
        value: "Lingfield - training location",
        text: "Lingfield - training location",
        checked: checked(data.statisticsFilters.location, "Lingfield - training location") == "checked"
      }
    ]
  }) if (showFilters and 'location' in showFilters) }}

  {{ govukCheckboxes({
    idPrefix: "accreditedBody",
    name: "statisticsFilters[accreditedBody]",
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: "Courses ratified by",
        classes: "govuk-fieldset__legend--s"
      }
    },
    items: [
      {
        value: data.accreditedBodies[0].name,
        text: data.accreditedBodies[0].name,
        checked: checked(data.statisticsFilters.accreditedBody, data.accreditedBodies[0].name) == "checked"
      },
      {
        value: data.accreditedBodies[1].name,
        text: data.accreditedBodies[1].name,
        checked: checked(data.statisticsFilters.accreditedBody, data.accreditedBodies[1].name) == "checked"
      }
    ]
  }) if (showFilters and 'accreditedBody' in showFilters) }}

  {#% if subjectItems.length >= subjectItemsDisplayLimit %}

    {{ appCheckboxFilter({
      idPrefix: "subject",
      name: "statisticsFilters[subject]",
      legend: {
        text: "Subject"
      },
      items: subjectItems,
      selectedItems: selectedSubjects,
      classes: "govuk-!-margin-bottom-7"
    }) }}

  {% else %}

    {{ govukCheckboxes({
      idPrefix: "subject",
      name: "statisticsFilters[subject]",
      fieldset: {
        legend: {
          text: "Subject",
          classes: "govuk-fieldset__legend--s"
        }
      },
      items: subjectItems,
      classes: "govuk-checkboxes--small"
    }) }}

  {% endif %#}

  {{ govukCheckboxes({
    idPrefix: "studyMode",
    name: "statisticsFilters[studyMode]",
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: "Full time or part time",
        classes: "govuk-fieldset__legend--s"
      }
    },
    items: [
      {
        value: "Full time",
        text: "Full time",
        checked: checked(data.statisticsFilters.studyMode, "Full time") == "checked"
      },
      {
        value: "Part time",
        text: "Part time",
        checked: checked(data.statisticsFilters.studyMode, "Part time") == "checked"
      }
    ]
  }) if (showFilters and 'studyMode' in showFilters) }}

  {{ govukCheckboxes({
    idPrefix: "fundingType",
    name: "statisticsFilters[fundingType]",
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: "Funding type",
        classes: "govuk-fieldset__legend--s"
      }
    },
    items: [
      {
        value: "Fee paying",
        text: "Fee paying",
        checked: checked(data.statisticsFilters.fundingType, "Fee paying") == "checked"
      },
      {
        value: "Salaried",
        text: "Salaried",
        checked: checked(data.statisticsFilters.fundingType, "Salaried") == "checked"
      },
      {
        value: "Apprenticeship",
        text: "Apprenticeship",
        checked: checked(data.statisticsFilters.fundingType, "Apprenticeship") == "checked"
      }
    ]
  })  if (showFilters and 'fundingType' in showFilters) }}

  {{ govukCheckboxes({
    idPrefix: "subjectLevel",
    name: "statisticsFilters[subjectLevel]",
    classes: "govuk-checkboxes--small",
    fieldset: {
      legend: {
        text: "Subject level",
        classes: "govuk-fieldset__legend--s"
      }
    },
    items: [
      {
        value: "Primary",
        text: "Primary",
        checked: checked(data.statisticsFilters.subjectLevel, "Primary") == "checked"
      },
      {
        value: "Secondary",
        text: "Secondary",
        checked: checked(data.statisticsFilters.subjectLevel, "Secondary") == "checked"
      }
    ]
  }) if (showFilters and 'subjectLevel' in showFilters) }}
{% endset %}

<div class="app-filter">
  <div class="app-filter__header">
    <div class="app-filter__header-title">
      <h2 class="govuk-heading-m">Filters</h2>
    </div>
    <div class="app-filter__header-action">

    </div>
  </div>
  <div class="app-filter__content">
    {% if selectedFilters %}
      <div class="app-filter__selected">
        <div class="app-filter__selected-heading">
          <div class="app-filter__heading-title">
            <h2 class="govuk-heading-m govuk-!-margin-bottom-1">Selected filters</h2>
            <p class="govuk-body"><a class="govuk-link govuk-link--no-visited-state" href="/statistics/{{ report }}/remove-all-filters">Clear filters</a></p>
          </div>
        </div>

        {% for category in selectedFilters.categories %}
          <h3 class="govuk-heading-s govuk-!-margin-bottom-0">{{ category.heading.text }}</h3>
          <ul class="app-filter-tags">
            {% for item in category.items %}
              <li><a class="app-filter__tag" href="{{ item.href }}"><span class="govuk-visually-hidden">Remove this filter</span> {{item.text}}</a></li>
            {% endfor %}
          </ul>
        {% endfor %}
      </div>
    {% endif %}
    <div class="app-filter__options">
      <form method="get" accept-charset="UTF-8" novalidate>
        <button class="govuk-button" data-module="govuk-button">
          Apply filters
        </button>
        {{ filterOptionsHtml | safe }}
      </form>
    </div>
  </div>
</div>
