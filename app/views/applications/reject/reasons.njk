{% extends "_layout.njk" %}
{% from "govuk/components/character-count/macro.njk" import govukCharacterCount %}

{% set primaryNavId = 'applications' %}
{% set name = application.personalDetails.name %}

{% if application.status == "Rejected" %}
  {% set caption = content.giveFeedback.caption + ' - ' + name %}
  {% set heading = "Reasons the application was rejected" %}
{% else %}
  {% set caption = content.rejectApplication.caption + ' - ' + name %}
  {% set heading = "Tell " + name + " why you are rejecting their application" %}
{% endif %}
{% set title = heading + ' - ' + caption %}

{% block pageNavigation %}
  {% set backUrl = "/applications/" + application.id + "/decision" %}
  {% if application.status == "Rejected" %}
    {% set backUrl = "/applications/" + application.id %}
  {% endif %}

  {{ govukBackLink({
    href: backUrl
  }) }}
{% endblock %}

{% block content %}
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

      <form method="get" action="/applications/{{ applicationId }}/reject/check">

        {% set qualificationDegreeGradeDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][qualifications][degreeGrade]",
            id: "rejection-details-qualifications-degreeGrade",
            value: data.rejection.details.qualifications.degreeGrade,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set qualificationDegreeSubjectDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][qualifications][degreeSubject]",
            id: "rejection-details-qualifications-degreeSubject",
            value: data.rejection.details.qualifications.degreeSubject,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set qualificationVerificationDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][qualifications][verification]",
            id: "rejection-details-qualifications-verification",
            value: data.rejection.details.qualifications.verification,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set qualificationEquivalencyDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][qualifications][equivalency]",
            id: "rejection-details-qualifications-equivalency",
            value: data.rejection.details.qualifications.equivalency,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set qualificationQualifiedDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][qualifications][qualified]",
            id: "rejection-details-qualifications-qualified",
            value: data.rejection.details.qualifications.qualified,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set qualificationOtherHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][qualifications][other]",
            id: "rejection-details-qualifications-other",
            value: data.rejection.details.qualifications.other,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set qualificationsReasonsHtml %}

        <h1 class="govuk-heading-s">Reasons</h1>
        {{ govukCheckboxes({
          idPrefix: "rejection-qualifications-exams",
          name: "rejection[subCategories][qualifications]",
          fieldset: {
            legend: {
              html: "Exams",
              isPageHeading: false
            }
          },
          items: [
          {
            value: "maths",
            text: "No maths GCSE at minimum grade 4 or C, or equivalent",
            checked: checked("rejection[subCategories][qualifications]", "maths")
          },
          {
            value: "english",
            text: "No English GCSE at minimum grade 4 or C, or equivalent",
            checked: checked("rejection[subCategories][qualifications]", "english")
          },
          {
            value: "science",
            text: "No science GCSE at minimum grade 4 or C, or equivalent",
            checked: checked("rejection[subCategories][qualifications]", "science")
          },
          {
            value: "alevels",
            text: "A levels do not meet course requirements",
            checked: checked("rejection[subCategories][qualifications]", "alevels")
          }
          ]
      }) }}

        {{ govukCheckboxes({
          idPrefix: "rejection-qualifications-degree",
          name: "rejection[subCategories][qualifications]",
          fieldset: {
            legend: {
              html: "Degree",
              isPageHeading: false
            }
          },
          items: [          {
            value: "degree",
            text: "No bachelorâ€™s degree or equivalent",
            checked: checked("rejection[subCategories][qualifications]", "degree")
          },
          {
            value: "degreeGrade",
            text: "Degree grade does not meet course requirements",
            checked: checked("rejection[subCategories][qualifications]", "degreeGrade"),
            conditional: {
              html: qualificationDegreeGradeDetailsHtml
            }
          },
          {
            value: "degreeSubject",
            text: "Degree subject does not meet course requirements",
            checked: checked("rejection[subCategories][qualifications]", "degreeSubject"),
            conditional: {
              html: qualificationDegreeSubjectDetailsHtml
            }
          }
          ]
      }) }}

        {{ govukCheckboxes({
          idPrefix: "rejection-qualifications-other",
          name: "rejection[subCategories][qualifications]",
          fieldset: {
            legend: {
              html: "Other",
              isPageHeading: false
            }
          },
          items: [
          {
            value: "verification",
            text: "Could not verify qualifications",
            checked: checked("rejection[subCategories][qualifications]", "verification"),
            conditional: {
              html: qualificationVerificationDetailsHtml
            }
          },
          {
            value: "equivalency",
            text: "Could not verify equivalency of qualifications",
            checked: checked("rejection[subCategories][qualifications]", "equivalency"),
            conditional: {
              html: qualificationEquivalencyDetailsHtml
            }
          },
          {
            value: "qualified",
            text: "Already has a teaching qualification",
            checked: checked("rejection[subCategories][qualifications]", "qualified"),
            conditional: {
              html: qualificationQualifiedDetailsHtml
            }
          },
          {
            value: "other",
            text: "Other",
            checked: checked("rejection[subCategories][qualifications]", "other"),
            conditional: {
              html: qualificationOtherHtml
            }
          }
          ]
      }) }}





        {% endset %}


        {% set personalStatementWritingDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][personalStatement][writing]",
            id: "rejection-details-personalStatement-writing",
            value: data.rejection.details.personalStatement.writing,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set personalStatementOtherDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][personalStatement][other]",
            id: "rejection-details-personalStatement-other",
            value: data.rejection.details.personalStatement.other,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set personalStatementReasonsHtml %}

        {{ govukCheckboxes({
          idPrefix: "rejection-personalStatement",
          name: "rejection[subCategories][personalStatement]",
          fieldset: {
            legend: {
              text: "Reasons",
              isPageHeading: false,
              classes: "govuk-fieldset__legend--s"
            }
          },
          items: [
          {
            value: "writing",
            text: "Quality of writing",
            checked: checked("rejection[subCategories][personalStatement]", "writing"),
            conditional: {
              html: personalStatementWritingDetailsHtml
            }
          },
          {
            value: "other",
            text: "Other",
            checked: checked("rejection[subCategories][personalStatement]", "other"),
            conditional: {
              html: personalStatementOtherDetailsHtml
            }
          }
          ]
      }) }}

        {% endset %}


        {% set interviewPerformanceSubjectDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][interview][subject]",
            id: "rejection-details-interview-subject",
            value: data.rejection.details.interview.subject,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set interviewPerformanceSafeguardingDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][interview][safeguarding]",
            id: "rejection-details-interview-safeguarding",
            value: data.rejection.details.interview.safeguarding,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set interviewPerformanceMethodDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][interview][method]",
            id: "rejection-details-interview-method",
            value: data.rejection.details.interview.method,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set interviewPerformanceRoleDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][interview][role]",
            id: "rejection-details-interview-role",
            value: data.rejection.details.interview.role,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set interviewPerformanceDemoDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][interview][demo]",
            id: "rejection-details-interview-demo",
            value: data.rejection.details.interview.demo,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set interviewPerformanceOtherDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][interview][other]",
            id: "rejection-details-interview-other",
            value: data.rejection.details.interview.other,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set interviewPerformanceReasonsHtml %}

        {{ govukCheckboxes({
          idPrefix: "rejection-interview",
          name: "rejection[subCategories][interview]",
          fieldset: {
            legend: {
              text: "Reasons",
              isPageHeading: false,
              classes: "govuk-fieldset__legend--s"
            }
          },
          items: [
          {
            value: "subject",
            text: "Subject knowledge",
            checked: checked("rejection[subCategories][interview]", "subject"),
            conditional: {
              html: interviewPerformanceSubjectDetailsHtml
            }
          },
          {
            value: "safeguarding",
            text: "Safeguarding knowledge",
            checked: checked("rejection[subCategories][interview]", "safeguarding"),
            conditional: {
              html: interviewPerformanceSafeguardingDetailsHtml
            }
          },
          {
            value: "method",
            text: "Teaching method knowledge",
            checked: checked("rejection[subCategories][interview]", "method"),
            conditional: {
              html: interviewPerformanceMethodDetailsHtml
            }
          },
          {
            value: "role",
            text: "Teaching role knowledge",
            checked: checked("rejection[subCategories][interview]", "role"),
            conditional: {
              html: interviewPerformanceRoleDetailsHtml
            }
          },
          {
            value: "demo",
            text: "Teaching demonstration",
            checked: checked("rejection[subCategories][interview]", "demo"),
            conditional: {
              html: interviewPerformanceDemoDetailsHtml
            }
          },
          {
            value: "other",
            text: "Other",
            checked: checked("rejection[subCategories][interview]", "other"),
            conditional: {
              html: interviewPerformanceOtherDetailsHtml
            }
          }
          ]
      }) }}

        {% endset %}


        {% set communicationReplyDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][communication][reply]",
            id: "rejection-details-communication-reply",
            value: data.rejection.details.communication.reply,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set communicationAttendDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][communication][attend]",
            id: "rejection-details-communication-attend",
            value: data.rejection.details.communication.attend,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set communicationArrangeDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][communication][arrange]",
            id: "rejection-details-communication-arrange",
            value: data.rejection.details.communication.arrange,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set communicationOtherDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][communication][other]",
            id: "rejection-details-communication-other",
            value: data.rejection.details.communication.other,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set communicationEnglishDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][communication][english]",
            id: "rejection-details-communication-english",
            value: data.rejection.details.communication.english,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set communicationReasonsHtml %}

        {{ govukCheckboxes({
          idPrefix: "rejection-communication",
          name: "rejection[subCategories][communication]",
          fieldset: {
            legend: {
              text: "Reasons",
              isPageHeading: false,
              classes: "govuk-fieldset__legend--s"
            }
          },
          items: [
          {
            value: "reply",
            text: "Did not reply to messages",
            checked: checked("rejection[subCategories][communication]", "reply"),
            conditional: {
              html: communicationReplyDetailsHtml
            }
          },
          {
            value: "attend",
            text: "Did not attend interview",
            checked: checked("rejection[subCategories][communication]", "attend"),
            conditional: {
              html: communicationAttendDetailsHtml
            }
          },
          {
            value: "arrange",
            text: "Could not arrange interviews",
            checked: checked("rejection[subCategories][communication]", "arrange"),
            conditional: {
              html: communicationArrangeDetailsHtml
            }
          },
          {
            value: "english",
            text: "English language ability below expected standard",
            checked: checked("rejection[subCategories][communication]", "english"),
            conditional: {
              html: communicationEnglishDetailsHtml
            }
          },
          {
            value: "other",
            text: "Other",
            checked: checked("rejection[subCategories][communication]", "other"),
            conditional: {
              html: communicationOtherDetailsHtml
            }
          }
          ]
      }) }}

        {% endset %}


        {% set safeguardingHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][safeguarding]",
            id: "rejection-details-safeguarding",
            value: data.rejection.details.safeguarding,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set visaSponsorshipHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][visaSponsorship]",
            id: "rejection-details-visaSponsorship",
            value: data.rejection.details.visaSponsorship,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set placementAvailableDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][placement][available]",
            id: "rejection-details-placement-available",
            value: data.rejection.details.placement.available,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set placementSuitableDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][placement][suitable]",
            id: "rejection-details-placement-suitable",
            value: data.rejection.details.placement.suitable,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set placementOtherDetailsHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][placement][other]",
            id: "rejection-details-placement-other",
            value: data.rejection.details.placement.other,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set placementlHtml %}

        {{ govukCheckboxes({
          idPrefix: "rejection-placement",
          name: "rejection[subCategories][placement]",
          fieldset: {
            legend: {
              text: "Reasons",
              isPageHeading: false,
              classes: "govuk-fieldset__legend--s"
            }
          },
          items: [
          {
            value: "available",
            text: "No available placements",
            checked: checked("rejection[subCategories][placement]", "available"),
            conditional: {
              html: placementAvailableDetailsHtml
            }
          },
          {
            value: "suitable",
            text: "No placements that are suitable",
            checked: checked("rejection[subCategories][placement]", "suitable"),
            conditional: {
              html: placementSuitableDetailsHtml
            }
          },
          {
            value: "other",
            text: "Other",
            checked: checked("rejection[subCategories][placement]", "other"),
            conditional: {
              html: placementOtherDetailsHtml
            }
          }
          ]
      }) }}

        {% endset %}

        {% set courseFullHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][courseFull]",
            id: "rejection-details-courseFull",
            value: data.rejection.details.courseFull,
            label: {
              text: "Details (optional)",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {% set otherHtml %}
          {{ govukCharacterCount({
            name: "rejection[details][other]",
            id: "rejection-details-other",
            value: data.rejection.details.other,
            label: {
              text: "Details",
              classes: "govuk-label--s"
            },
            maxwords: 200
          }) }}
        {% endset %}

        {{ govukCheckboxes({
          idPrefix: "rejection-categories",
          name: "rejection[categories]",
          fieldset: {
            legend: {
              text: "Tell " + name + " why you are rejecting their application",
              isPageHeading: true,
              classes: "govuk-fieldset__legend--l"
            }
          },
        items: [
        {
          value: "qualifications",
          text: "Qualifications",
          checked: checked("['rejection']['categories']", "qualifications"),
          conditional: {
            html: qualificationsReasonsHtml
          }
        },
        {
          value: "personalStatement",
          text: "Personal statement",
          checked: checked("['rejection']['categories']", "personalStatement"),
          conditional: {
            html: personalStatementReasonsHtml
          }
        },
        {
          value: "interview",
          text: "Teaching knowledge, ability and interview performance",
          checked: checked("['rejection']['categories']", "interview"),
          conditional: {
            html: interviewPerformanceReasonsHtml
          }
        },
        {
          value: "communication",
          text: "Communication, interview attendance and scheduling",
          checked: checked("['rejection']['categories']", "communication"),
          conditional: {
            html: communicationReasonsHtml
          }
        },
        {
          value: "safeguarding",
          text: "Safeguarding",
          checked: checked("['rejection']['categories']", "safeguarding"),
          conditional: {
            html: safeguardingHtml
          }
        },
        {
          value: "visaSponsorship",
          text: "Visa sponsorship",
          checked: checked("['rejection']['categories']", "visaSponsorship"),
          conditional: {
            html: visaSponsorshipHtml
          }
        },
        {
          value: "courseFull",
          text: "Course full",
          checked: checked("['rejection']['categories']", "courseFull"),
          conditional: {
            html: courseFullHtml
          }
        },
        {
          value: "placement",
          text: "School placement",
          checked: checked("['rejection']['categories']", "placement"),
          conditional: {
            html: placementlHtml
          }
        },
        {
          value: "other",
          text: "Other",
          checked: checked("['rejection']['categories']", "other"),
          conditional: {
            html: otherHtml
          }
        }
      ]
    }) }}


        {{ govukButton({
          text: "Continue"
        }) }}
      </form>

      <p class="govuk-body"><a class="govuk-link--no-visited-state" href="/applications/{{ application.id }}">Cancel</a></p>
    </div>
  </div>
{% endblock %}
